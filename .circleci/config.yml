version: 2.1

orbs:
  nx: nrwl/nx@1.5.1
  codecov: codecov/codecov@3.2.3

aliases:
  - &docker_image
    - image: cimg/node:lts-browsers

  - &current_workspace
    attach_workspace: { at: '.' }

jobs:
  install-dependencies:
    docker: *docker_image
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - nx/set-shas:
          allow-on-hold-workflow: true
          error-on-no-successful-workflow: true
          main-branch-name: main
          workflow-name: nx-pipeline
      - persist_to_workspace:
          root: '.'
          paths:
            - 'node_modules/*'
  static-validation:
    docker: *docker_image
    steps:
      - checkout
      - *current_workspace
      - run:
          name: Workspace Lint
          command: yarn nx workspace-lint
      - run:
          name: Format Check
          command: yarn nx format:check
      - run:
          name: Run Lint
          command: yarn nx affected --target=lint --base=$NX_BASE
  unit-test:
    docker: *docker_image
    steps:
      - checkout
      - *current_workspace
      - run:
          name: Run Unit Tests
          command: yarn nx affected --target=test --base=$NX_BASE
  coverage:
    docker: *docker_image
    steps:
      - checkout
      - *current_workspace
      - run:
          name: Run Coverage
          command: JEST_JUNIT_OUTPUT_DIR="./test-results/components-to-markdown/" yarn nx cover components-to-markdown
      - store_test_results:
          path: test-results
      - codecov/upload:
          file: coverage/packages/components-to-markdown/lcov.info
          flags: components-to-markdown
  build:
    docker: *docker_image
    steps:
      - checkout
      - *current_workspace
      - run:
          # Start with an empty directory to not break the build when there are no packages affected
          name: Create the dist directory
          command: mkdir dist && touch dist/.keep
      - run:
          name: Run Builds
          command: yarn nx affected --target=build --base=$NX_BASE
      - persist_to_workspace:
          root: '.'
          paths:
            - 'dist/*'
  pr-check:
    docker: *docker_image
    steps:
      - checkout
      - *current_workspace
      - run:
          name: Auto check PR
          command: yarn auto pr-check --url $CIRCLE_BUILD_URL
  docs-check:
    docker: *docker_image
    steps:
      - checkout
      - *current_workspace
      - run:
          name: Run the lib against the example to update the doc
          command: ./scripts/comp-to-website.sh
      - run:
          name: Check if there are any changes that have not been committed
          command: ./scripts/check-git-diff.sh
  publish-latest:
    docker: *docker_image
    steps:
      - checkout
      - *current_workspace
      - run:
          name: Configure NPM credentials
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: Publish latest version
          command: ./scripts/bump-version.sh latest

workflows:
  build:
    jobs:
      - install-dependencies
      - static-validation:
          requires:
            - install-dependencies
      - unit-test:
          requires:
            - install-dependencies
      - coverage:
          requires:
            - unit-test
      - build:
          requires:
            - install-dependencies
      - docs-check:
          requires:
            - install-dependencies
      - pr-check:
          filters:
            branches:
              ignore:
                - main
                - next
          requires:
            - install-dependencies
      - publish-latest:
          filters:
            branches:
              only: main
          requires:
            - unit-test
            - build
