version: 2.1

orbs:
  nx: nrwl/nx@1.5.1

aliases:
  - &docker_image
    - image: cimg/node:lts-browsers

  - &current_workspace
    attach_workspace: { at: '.' }

jobs:
  install-dependencies:
    docker: *docker_image
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - nx/set-shas:
          allow-on-hold-workflow: true
          error-on-no-successful-workflow: true
          main-branch-name: main
          workflow-name: nx-pipeline
      - persist_to_workspace:
          root: '.'
          paths:
            - 'node_modules/*'
  check:
    docker: *docker_image
    steps:
      - checkout
      - *current_workspace
      - run:
          name: Workspace Lint
          command: yarn nx workspace-lint
      - run:
          name: Format Check
          command: yarn nx format:check
      - run:
          name: Run Lint
          command: yarn nx affected --target=lint --base=$NX_BASE
  test:
    docker: *docker_image
    steps:
      - checkout
      - *current_workspace
      - run:
          name: Run Unit Tests
          command: yarn nx affected --target=test --base=$NX_BASE
  build:
    docker: *docker_image
    steps:
      - checkout
      - *current_workspace
      - run:
          # Start with an empty directory to not break the build when there are no packages affected
          name: Create the dist directory
          command: mkdir dist
      - run:
          name: Run Builds
          command: yarn nx affected --target=build --base=$NX_BASE
      - persist_to_workspace:
          root: '.'
          paths:
            - 'dist/*'
  # publish-latest:
  #   docker: *docker_image
  #   steps:
  #     - checkout
  #     - *current_workspace
  #     - run:
  #         name: Publish latest version
  #         command: yarn nx affected --target=publish --base=$NX_BASE --tag=latest --ver=???

workflows:
  build:
    jobs:
      - install-dependencies
      - check:
          requires:
            - install-dependencies
      - test:
          requires:
            - install-dependencies
      - build:
          requires:
            - install-dependencies
      # - publish-latest:
      #     filters:
      #       branches:
      #         only: main
      #     requires:
      #       - check
      #       - test
      #       - build
